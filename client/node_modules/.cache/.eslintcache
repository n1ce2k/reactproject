[{"C:\\Users\\n1ce\\PhpstormProjects\\untitled\\src\\index.tsx":"1","C:\\Users\\n1ce\\PhpstormProjects\\untitled\\src\\App.tsx":"2","C:\\Users\\n1ce\\Desktop\\swproject\\client\\src\\index.tsx":"3","C:\\Users\\n1ce\\Desktop\\swproject\\client\\src\\App.tsx":"4"},{"size":485,"mtime":1688225838595,"results":"5","hashOfConfig":"6"},{"size":1499,"mtime":1688225849144,"results":"7","hashOfConfig":"6"},{"size":147,"mtime":1688315903526,"results":"8","hashOfConfig":"9"},{"size":4985,"mtime":1688365547275,"results":"10","hashOfConfig":"9"},{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h3nwki",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tvqayr",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\n1ce\\PhpstormProjects\\untitled\\src\\index.tsx",[],[],"C:\\Users\\n1ce\\PhpstormProjects\\untitled\\src\\App.tsx",["24","25"],[],"import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Layout, Spin, Alert } from 'antd';\n\nconst { Content } = Layout;\n\nconst GET_CHARACTERS = gql`\n  query GetCharacters {\n    allPeople {\n      people {\n        name\n        height\n        mass\n        homeworld {\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst App: React.FC = () => {\n    const { loading, error, data } = useQuery(GET_CHARACTERS);\n\n    if (loading) {\n        return (\n            <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Spin size=\"large\" />\n            </Content>\n        );\n    }\n\n    if (error) {\n        return (\n            <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Alert message=\"Error fetching data\" type=\"error\" />\n            </Content>\n        );\n    }\n\n    const characters = data.allPeople.people;\n\n    return (\n        <Content style={{ padding: '24px' }}>\n            <h1>Star Wars Characters</h1>\n            <ul>\n                {characters.map((character: any) => (\n                    <li key={character.name}>\n                        <h3>{character.name}</h3>\n                        <p>Height: {character.height}</p>\n                        <p>Mass: {character.mass}</p>\n                        <p>Homeworld: {character.homeworld.name}</p>\n                    </li>\n                ))}\n            </ul>\n        </Content>\n    );\n};\n\nexport default App;\n","C:\\Users\\n1ce\\Desktop\\swproject\\client\\src\\index.tsx",[],[],"C:\\Users\\n1ce\\Desktop\\swproject\\client\\src\\App.tsx",["26"],[],{"ruleId":"27","severity":1,"message":"28","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":11},{"ruleId":"31","severity":1,"message":"32","line":12,"column":17,"nodeType":"33","endLine":12,"endColumn":28},{"ruleId":"27","severity":1,"message":"34","line":3,"column":24,"nodeType":"29","messageId":"30","endLine":3,"endColumn":28},"@typescript-eslint/no-unused-vars","'exp' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'List' is defined but never used."]
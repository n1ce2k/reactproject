{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\n1ce\\\\PhpstormProjects\\\\untitled\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Layout, Spin, Alert } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content\n} = Layout;\nconst GET_CHARACTERS = gql`\n  query GetCharacters {\n    allPeople {\n      people {\n        name\n        height\n        mass\n        homeworld {\n          name\n        }\n      }\n    }\n  }\n`;\nconst App = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CHARACTERS);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        message: \"Error fetching data\",\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n  const characters = data.allPeople.people;\n  return /*#__PURE__*/_jsxDEV(Content, {\n    style: {\n      padding: '24px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Star Wars Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: characters.map(character => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Height: \", character.height]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mass: \", character.mass]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Homeworld: \", character.homeworld.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, character.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useQuery","gql","Layout","Spin","Alert","jsxDEV","_jsxDEV","Content","GET_CHARACTERS","App","_s","loading","error","data","style","display","justifyContent","alignItems","children","size","fileName","_jsxFileName","lineNumber","columnNumber","message","type","characters","allPeople","people","padding","map","character","name","height","mass","homeworld","_c","$RefreshReg$"],"sources":["C:/Users/n1ce/PhpstormProjects/untitled/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Layout, Spin, Alert } from 'antd';\n\nconst { Content } = Layout;\n\nconst GET_CHARACTERS = gql`\n  query GetCharacters {\n    allPeople {\n      people {\n        name\n        height\n        mass\n        homeworld {\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst App: React.FC = () => {\n    const { loading, error, data } = useQuery(GET_CHARACTERS);\n\n    if (loading) {\n        return (\n            <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Spin size=\"large\" />\n            </Content>\n        );\n    }\n\n    if (error) {\n        return (\n            <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Alert message=\"Error fetching data\" type=\"error\" />\n            </Content>\n        );\n    }\n\n    const characters = data.allPeople.people;\n\n    return (\n        <Content style={{ padding: '24px' }}>\n            <h1>Star Wars Characters</h1>\n            <ul>\n                {characters.map((character: any) => (\n                    <li key={character.name}>\n                        <h3>{character.name}</h3>\n                        <p>Height: {character.height}</p>\n                        <p>Mass: {character.mass}</p>\n                        <p>Homeworld: {character.homeworld.name}</p>\n                    </li>\n                ))}\n            </ul>\n        </Content>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
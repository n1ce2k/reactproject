{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/n1ce/PhpstormProjects/untitled/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React from'react';import{useQuery,gql}from'@apollo/client';import{Layout,Spin,Alert}from'antd';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Content=Layout.Content;var GET_CHARACTERS=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query GetCharacters {\\n    allPeople {\\n      people {\\n        name\\n        height\\n        mass\\n        homeworld {\\n          name\\n        }\\n      }\\n    }\\n  }\\n\"])));var App=function App(){var _useQuery=useQuery(GET_CHARACTERS),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;if(loading){return/*#__PURE__*/_jsx(Content,{style:{display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(Spin,{size:\"large\"})});}if(error){return/*#__PURE__*/_jsx(Content,{style:{display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(Alert,{message:\"Error fetching data\",type:\"error\"})});}var characters=data.allPeople.people;return/*#__PURE__*/_jsxs(Content,{style:{padding:'24px'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Star Wars Characters\"}),/*#__PURE__*/_jsx(\"ul\",{children:characters.map(function(character){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:character.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Height: \",character.height]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Mass: \",character.mass]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Homeworld: \",character.homeworld.name]})]},character.name);})})]});};export default App;","map":{"version":3,"names":["React","useQuery","gql","Layout","Spin","Alert","jsx","_jsx","jsxs","_jsxs","Content","GET_CHARACTERS","_templateObject","_taggedTemplateLiteral","App","_useQuery","loading","error","data","style","display","justifyContent","alignItems","children","size","message","type","characters","allPeople","people","padding","map","character","name","height","mass","homeworld"],"sources":["C:/Users/n1ce/PhpstormProjects/untitled/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Layout, Spin, Alert } from 'antd';\n\nconst { Content } = Layout;\n\nconst GET_CHARACTERS = gql`\n  query GetCharacters {\n    allPeople {\n      people {\n        name\n        height\n        mass\n        homeworld {\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst App: React.FC = () => {\n    const { loading, error, data } = useQuery(GET_CHARACTERS);\n\n    if (loading) {\n        return (\n            <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Spin size=\"large\" />\n            </Content>\n        );\n    }\n\n    if (error) {\n        return (\n            <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Alert message=\"Error fetching data\" type=\"error\" />\n            </Content>\n        );\n    }\n\n    const characters = data.allPeople.people;\n\n    return (\n        <Content style={{ padding: '24px' }}>\n            <h1>Star Wars Characters</h1>\n            <ul>\n                {characters.map((character: any) => (\n                    <li key={character.name}>\n                        <h3>{character.name}</h3>\n                        <p>Height: {character.height}</p>\n                        <p>Mass: {character.mass}</p>\n                        <p>Homeworld: {character.homeworld.name}</p>\n                    </li>\n                ))}\n            </ul>\n        </Content>\n    );\n};\n\nexport default App;\n"],"mappings":"iKAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,GAAG,KAAQ,gBAAgB,CAC9C,OAASC,MAAM,CAAEC,IAAI,CAAEC,KAAK,KAAQ,MAAM,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3C,GAAQ,CAAAC,OAAO,CAAKP,MAAM,CAAlBO,OAAO,CAEf,GAAM,CAAAC,cAAc,CAAGT,GAAG,CAAAU,eAAA,GAAAA,eAAA,CAAAC,sBAAA,qLAazB,CAED,GAAM,CAAAC,GAAa,CAAG,QAAhB,CAAAA,GAAaA,CAAA,CAAS,CACxB,IAAAC,SAAA,CAAiCd,QAAQ,CAACU,cAAc,CAAC,CAAjDK,OAAO,CAAAD,SAAA,CAAPC,OAAO,CAAEC,KAAK,CAAAF,SAAA,CAALE,KAAK,CAAEC,IAAI,CAAAH,SAAA,CAAJG,IAAI,CAE5B,GAAIF,OAAO,CAAE,CACT,mBACIT,IAAA,CAACG,OAAO,EAACS,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAS,CAAE,CAAAC,QAAA,cAChFhB,IAAA,CAACH,IAAI,EAACoB,IAAI,CAAC,OAAO,CAAE,CAAC,CAChB,CAAC,CAElB,CAEA,GAAIP,KAAK,CAAE,CACP,mBACIV,IAAA,CAACG,OAAO,EAACS,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAS,CAAE,CAAAC,QAAA,cAChFhB,IAAA,CAACF,KAAK,EAACoB,OAAO,CAAC,qBAAqB,CAACC,IAAI,CAAC,OAAO,CAAE,CAAC,CAC/C,CAAC,CAElB,CAEA,GAAM,CAAAC,UAAU,CAAGT,IAAI,CAACU,SAAS,CAACC,MAAM,CAExC,mBACIpB,KAAA,CAACC,OAAO,EAACS,KAAK,CAAE,CAAEW,OAAO,CAAE,MAAO,CAAE,CAAAP,QAAA,eAChChB,IAAA,OAAAgB,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BhB,IAAA,OAAAgB,QAAA,CACKI,UAAU,CAACI,GAAG,CAAC,SAACC,SAAc,qBAC3BvB,KAAA,OAAAc,QAAA,eACIhB,IAAA,OAAAgB,QAAA,CAAKS,SAAS,CAACC,IAAI,CAAK,CAAC,cACzBxB,KAAA,MAAAc,QAAA,EAAG,UAAQ,CAACS,SAAS,CAACE,MAAM,EAAI,CAAC,cACjCzB,KAAA,MAAAc,QAAA,EAAG,QAAM,CAACS,SAAS,CAACG,IAAI,EAAI,CAAC,cAC7B1B,KAAA,MAAAc,QAAA,EAAG,aAAW,CAACS,SAAS,CAACI,SAAS,CAACH,IAAI,EAAI,CAAC,GAJvCD,SAAS,CAACC,IAKf,CAAC,EACR,CAAC,CACF,CAAC,EACA,CAAC,CAElB,CAAC,CAED,cAAe,CAAAnB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}